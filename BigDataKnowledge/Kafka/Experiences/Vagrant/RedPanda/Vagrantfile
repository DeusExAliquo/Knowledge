Vagrant.configure(2) do |config|

	# before you must install these plugins to speed up vagrant provisionning
	# vagrant plugin install vagrant-faster
	# vagrant plugin install vagrant-cachier

	config.cache.auto_detect = true
	# Set some variables
	etcHosts = ""
	prometheus = ""
	nodesnumber = ""
	redPanda = ""

	# Check ingress controller
    print "How many brockers should you have ?\n"
    nodesnumber = STDIN.gets.chomp

	print "Do you want RedPanda ? 0 = yes 1 = no\n"
    redPanda = STDIN.gets.chomp

	# some settings for common server (not for haproxy)
	common = <<-SHELL
	sudo apt update -qq 2>&1 >/dev/null
	sudo apt install -y -qq curl openjdk-11-jre-headless software-properties-common git vim tree net-tools telnet git 2>&1 >/dev/null
	sed -i 's/ChallengeResponseAuthentication no/ChallengeResponseAuthentication yes/g' /etc/ssh/sshd_config
	sudo systemctl restart sshd
	SHELL

	#config.vm.box = "debian/bullseye64"
	#config.vm.box_url = "debian/bullseye64"
	config.vm.box = "ubuntu/focal64"
	config.vm.box_url = "ubuntu/focal64"


	# set servers list and their parameters
    NODES = []
    startingIp = 77
    nodesnumber = nodesnumber.to_i
    (1..nodesnumber).each do |i|
        print ":hostname => kafka#{i}, :ip => 192.168.12.#{startingIp+i}, :cpus => 2, :mem => 2048, :type => kafka\n"
        NODES.push({ :hostname => "kafka#{i}", :ip => "192.168.12.#{startingIp+i}", :cpus => 2, :mem => 2048, :type => "kafka" })
    end

	if redPanda=="0"
		NODES.push({ :hostname => "redpanda", :ip => "192.168.12.77", :cpus => 2, :mem => 2048, :type => "redpanda" })
	end

	# define /etc/hosts for all servers
	NODES.each do |node|
		etcHosts += "echo '" + node[:ip] + "   " + node[:hostname] + "'>> /etc/hosts" + "\n"
	end #end NODES

	# run installation
	NODES.each_with_index do |node, index|
		config.vm.define node[:hostname] do |cfg|
			cfg.vm.hostname = node[:hostname]
			cfg.vm.network "private_network", ip: node[:ip]
			cfg.vm.provider "virtualbox" do |v|
				v.customize [ "modifyvm", :id, "--cpus", node[:cpus] ]
				v.customize [ "modifyvm", :id, "--memory", node[:mem] ]
				v.customize [ "modifyvm", :id, "--natdnshostresolver1", "on" ]
				v.customize [ "modifyvm", :id, "--natdnsproxy1", "on" ]
				v.customize [ "modifyvm", :id, "--name", node[:hostname] ]
				v.customize [ "modifyvm", :id, "--ioapic", "on" ]
				v.customize [ "modifyvm", :id, "--nictype1", "virtio" ]
			end #end provider

			#for all
			cfg.vm.provision :shell, :inline => etcHosts
			cfg.vm.provision :shell, :inline => common
			if node[:type] == "kafka"
				cfg.vm.provision "file", source: "../kafka/kafka_2.13-3.9.0.tgz", destination: "/home/vagrant/kafka_2.13-3.9.0.tgz"
            	cfg.vm.provision :shell, :path => "install_KRaft.sh", :args => [nodesnumber, index+1]
			elsif node[:type] == "redpanda"
				cfg.vm.provision :shell, :path => "install_RedPanda.sh", :args => [nodesnumber]
			end
		end # end config
	end # end nodes
end 	